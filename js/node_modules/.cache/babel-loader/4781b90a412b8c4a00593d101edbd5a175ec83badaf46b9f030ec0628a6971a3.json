{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pingh\\\\OneDrive\\\\Desktop\\\\CG2271\\\\Project\\\\js\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Joystick } from \"react-joystick-component\";\nimport { JoystickShape } from \"react-joystick-component\";\n//import \"./joystick.css\"\n\n// Function to convert joystick positions to wheel speeds\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction joystickToWheelSpeeds(x, y) {\n  // Angle in degrees\n  var angle = Math.atan2(y, x) * 180 / Math.PI;\n  // var maxSpeed = Math.sqrt(2) * Math.sin(angle + Math.PI / 4);\n  var leftSpeed = 0;\n  var rightSpeed = 0;\n  if (angle > 0 && angle <= 90) {\n    leftSpeed = 15;\n    rightSpeed = Math.floor(angle / 90 * 8) + 7;\n  } else if (angle > 90 && angle < 180) {\n    rightSpeed = 15;\n    angle -= 90;\n    leftSpeed = 8 - Math.floor(angle / 90 * 8) + 7;\n    if (leftSpeed === 0 && rightSpeed === 1) {\n      //forgo this small movement for move backwards\n      rightSpeed = 0;\n    }\n  } else if (angle < 0 & angle > -20) {\n    //extra for turn on spot\n    leftSpeed = 15;\n    rightSpeed = 0;\n  } else if (angle > -180 && angle < -160) {\n    //extra for turn on spot\n    leftSpeed = 0;\n    rightSpeed = 15;\n  } else {\n    //backward binary\n    leftSpeed = 0;\n    rightSpeed = 1;\n  }\n\n  //00000000 will be for stop\n\n  var ratioToMax = Math.sqrt(x * x + y * y); //magnitude\n  ratioToMax += 0.01; //prevents jittering at the edges of joystick\n  if (angle > 0 && angle < 180) {\n    rightSpeed *= ratioToMax;\n    leftSpeed *= ratioToMax;\n  }\n  if (rightSpeed === 1 && leftSpeed === 0) {\n    rightSpeed = 2;\n  }\n  if (angle < -20 && angle > -160) {\n    leftSpeed = 0;\n    rightSpeed = 1;\n  }\n  return {\n    leftWheelSpeed: leftSpeed,\n    rightWheelSpeed: rightSpeed\n  };\n}\nexport function Test() {\n  _s();\n  const [xPos, setXPos] = useState(0);\n  const [yPos, setYPos] = useState(0);\n  const [binarySpeed, setBinarySpeed] = useState(119);\n  const [leftWheelSpeed, setLeftWheelSpeed] = useState(0);\n  const [rightWheelSpeed, setRightWheelSpeed] = useState(0);\n  const [currTime, setCurrTime] = useState(Date.now());\n  function callReq() {\n    var request = new XMLHttpRequest();\n    request.open('POST', 'http://192.168.114.249/data');\n    request.send(JSON.stringify({\n      data: binarySpeed\n    }));\n  }\n  function callStop() {\n    var request = new XMLHttpRequest();\n    request.open('POST', 'http://192.168.114.249/data');\n    request.send(JSON.stringify({\n      data: 0\n    }));\n  }\n  const handleMove = stick => {\n    // setJoystickPos({ x: stick.x, y: stick.y });\n    setXPos(stick.x);\n    setYPos(stick.y);\n    const {\n      leftWheelSpeed,\n      rightWheelSpeed\n    } = joystickToWheelSpeeds(stick.x, stick.y);\n\n    // Convert wheel speeds to 4-bit values\n    //const left4Bit = Math.round((leftWheelSpeed + 1) * 7.5);\n    //const right4Bit = Math.round((rightWheelSpeed + 1) * 7.5);\n    const combined8BitValue = leftWheelSpeed << 4 | rightWheelSpeed;\n    setLeftWheelSpeed(((combined8BitValue >> 4) - 7) / 8.0);\n    setRightWheelSpeed(((combined8BitValue & 0b00001111) - 7) / 8.0);\n\n    //const binaryValue = combined8BitValue.toString(2).padStart(8, \"0\");\n    setBinarySpeed(combined8BitValue);\n    if (Date.now() - currTime > 100) {\n      setCurrTime(Date.now());\n      callReq();\n    }\n  };\n  const handleXStop = () => {\n    setXPos(0);\n    callStop();\n  };\n  const handleYStop = () => {\n    setYPos(0);\n    callStop();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"elem-to-center\",\n    children: [/*#__PURE__*/_jsxDEV(Joystick, {\n      controlPlaneShape: JoystickShape.AxisY,\n      pos: yPos,\n      move: handleMove,\n      stop: handleXStop,\n      stickSize: 100,\n      size: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Joystick, {\n      controlPlaneShape: JoystickShape.AxisX,\n      pos: xPos,\n      move: handleMove,\n      stop: handleYStop,\n      stickSize: 100,\n      size: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Binary Speed: \", binarySpeed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Left Speed in KL25: \", leftWheelSpeed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Right Speed in KL25: \", rightWheelSpeed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Test, \"zYB/rzWsCt5+o7rcewlVPMXtuv8=\");\n_c = Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["useState","Joystick","JoystickShape","jsxDEV","_jsxDEV","joystickToWheelSpeeds","x","y","angle","Math","atan2","PI","leftSpeed","rightSpeed","floor","ratioToMax","sqrt","leftWheelSpeed","rightWheelSpeed","Test","_s","xPos","setXPos","yPos","setYPos","binarySpeed","setBinarySpeed","setLeftWheelSpeed","setRightWheelSpeed","currTime","setCurrTime","Date","now","callReq","request","XMLHttpRequest","open","send","JSON","stringify","data","callStop","handleMove","stick","combined8BitValue","handleXStop","handleYStop","id","children","controlPlaneShape","AxisY","pos","move","stop","stickSize","size","fileName","_jsxFileName","lineNumber","columnNumber","AxisX","_c","$RefreshReg$"],"sources":["C:/Users/pingh/OneDrive/Desktop/CG2271/Project/js/src/Test.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { Joystick } from \"react-joystick-component\";\r\nimport { JoystickShape } from \"react-joystick-component\";\r\n//import \"./joystick.css\"\r\n\r\n// Function to convert joystick positions to wheel speeds\r\nfunction joystickToWheelSpeeds(x, y) {\r\n  // Angle in degrees\r\n  var angle = (Math.atan2(y, x) * 180) / Math.PI;\r\n  // var maxSpeed = Math.sqrt(2) * Math.sin(angle + Math.PI / 4);\r\n  var leftSpeed = 0;\r\n  var rightSpeed = 0;\r\n  if (angle > 0 && angle <= 90) {\r\n    leftSpeed = 15\r\n    rightSpeed = Math.floor((angle / 90) * 8) + 7;\r\n  } else if (angle > 90 && angle < 180) {\r\n    rightSpeed = 15;\r\n    angle -= 90;\r\n    leftSpeed = 8 - Math.floor((angle / 90) * 8) + 7;\r\n    if (leftSpeed === 0 && rightSpeed === 1) {\r\n      //forgo this small movement for move backwards\r\n      rightSpeed = 0;\r\n    }\r\n  } else if (angle < 0 & angle > -20) { //extra for turn on spot\r\n    leftSpeed = 15;\r\n    rightSpeed = 0;\r\n  } else if (angle > -180 && angle < -160) { //extra for turn on spot\r\n    leftSpeed = 0;\r\n    rightSpeed = 15;\r\n  } else {\r\n    //backward binary\r\n    leftSpeed = 0;\r\n    rightSpeed = 1;\r\n  }\r\n\r\n  //00000000 will be for stop\r\n\r\n  var ratioToMax = Math.sqrt(x * x + y * y); //magnitude\r\n  ratioToMax += 0.01; //prevents jittering at the edges of joystick\r\n  if (angle > 0 && angle < 180) {\r\n    rightSpeed *= ratioToMax;\r\n    leftSpeed *= ratioToMax;\r\n  }\r\n\r\n  if (rightSpeed === 1 && leftSpeed === 0) {\r\n    rightSpeed = 2;\r\n  }\r\n\r\n  if (angle < -20 && angle > -160) {\r\n    leftSpeed = 0;\r\n    rightSpeed = 1;\r\n  }\r\n\r\n  return {\r\n    leftWheelSpeed: leftSpeed,\r\n    rightWheelSpeed: rightSpeed,\r\n  };\r\n}\r\n\r\nexport function Test() {\r\n  const [xPos, setXPos] = useState(0);\r\n  const [yPos, setYPos] = useState(0);\r\n  const [binarySpeed, setBinarySpeed] = useState(119);\r\n  const [leftWheelSpeed, setLeftWheelSpeed] = useState(0);\r\n  const [rightWheelSpeed, setRightWheelSpeed] = useState(0);\r\n  const [currTime, setCurrTime] = useState(Date.now());\r\n\r\n  function callReq() {\r\n    var request = new XMLHttpRequest();\r\n    request.open('POST', 'http://192.168.114.249/data');\r\n    request.send(JSON.stringify({ data: binarySpeed }))\r\n  }\r\n\r\n  function callStop() {\r\n    var request = new XMLHttpRequest();\r\n    request.open('POST', 'http://192.168.114.249/data');\r\n    request.send(JSON.stringify({ data: 0 }))\r\n  }\r\n\r\n  const handleMove = (stick) => {\r\n    // setJoystickPos({ x: stick.x, y: stick.y });\r\n    setXPos(stick.x);\r\n    setYPos(stick.y);\r\n\r\n    const { leftWheelSpeed, rightWheelSpeed } = joystickToWheelSpeeds(\r\n      stick.x,\r\n      stick.y\r\n    );\r\n\r\n    // Convert wheel speeds to 4-bit values\r\n    //const left4Bit = Math.round((leftWheelSpeed + 1) * 7.5);\r\n    //const right4Bit = Math.round((rightWheelSpeed + 1) * 7.5);\r\n    const combined8BitValue = (leftWheelSpeed << 4) | rightWheelSpeed;\r\n    setLeftWheelSpeed(((combined8BitValue >> 4) - 7) / 8.0);\r\n    setRightWheelSpeed(((combined8BitValue & 0b00001111) - 7) / 8.0);\r\n\r\n    //const binaryValue = combined8BitValue.toString(2).padStart(8, \"0\");\r\n    setBinarySpeed(combined8BitValue);\r\n    if (Date.now() - currTime > 100) {\r\n      setCurrTime(Date.now());\r\n      callReq();\r\n    }\r\n  };\r\n\r\n  const handleXStop = () => {\r\n    setXPos(0);\r\n    callStop();\r\n  };\r\n\r\n  const handleYStop = () => {\r\n    setYPos(0);\r\n    callStop();\r\n  };\r\n\r\n  return (\r\n    <div id=\"elem-to-center\">\r\n      <Joystick controlPlaneShape={JoystickShape.AxisY} pos={yPos} move={handleMove} stop={handleXStop} stickSize={100} size={300} />\r\n      <Joystick controlPlaneShape={JoystickShape.AxisX} pos={xPos} move={handleMove} stop={handleYStop} stickSize={100} size={300} />\r\n      <p>Binary Speed: {binarySpeed}</p>\r\n      <p>Left Speed in KL25: {leftWheelSpeed}</p>\r\n      <p>Right Speed in KL25: {rightWheelSpeed}</p>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}